orbs:
  codecov: circleci/codecov-clojure@0.0.4
  my-orb: orbtest/circleci-nexus-orb@dev:first
#  my-orb:
#    executors:
#      default:
#        description: "CircleCI image for OpenJDK"
#        docker:
#        - image: circleci/openjdk
#
#    commands:
#      install:
#        description: "Installs the nexus-platform-api and CLI script"
#        parameters:
#          groovy-version:
#            type: string
#            default: "2.5.3"
#        steps:
#        # TODO: when NexusPublisher.groovy script has a released version update the curl command below accordingly
#        - run: |
#            curl -L https://dl.bintray.com/groovy/maven/apache-groovy-binary-<<parameters.groovy-version>>.zip -o apache-groovy-binary.zip
#            curl -L https://raw.githubusercontent.com/sonatype-nexus-community/circleci-nexus-orb/INT-1109_repository_groovy_wrapper/cli/src/main/groovy/NexusPublisher.groovy -o NexusPublisher.groovy
#            unzip apache-groovy-binary.zip
#            mv groovy-<< parameters.groovy-version>> groovy
#
#      archive:
#        description: "Archives artifacts to Nexus Repository Manager"
#        parameters:
#          username:
#            type: string
#            default: "${NEXUS_RM_USERNAME}"
#          password:
#            type: string
#            default: "${NEXUS_RM_PASSWORD}"
#          serverurl:
#            type: string
#            default: "${NEXUS_RM_SERVERURL}"
#          filename:
#            type: string
#          format:
#            type: string
#            default: "maven2"
#          params:
#            type: string
#          repository:
#            type: string
#            default: "maven"
#
#        steps:
#        - attach_workspace:
#            at: /tmp/workspace
#        - run: >
#            groovy/bin/groovy NexusPublisher.groovy
#            --username <<parameters.username>>
#            --password <<parameters.password>>
#            --serverurl <<parameters.serverurl>>
#            --filename <<parameters.filename>>
#            --format <<parameters.format>>
#            --repository <<parameters.repository>>
#            <<parameters.params>>
#
#    jobs:
#      nexusjob:
#        executor: default
#        steps:
#        - install
#        - archive


version: 2.1
jobs: # a collection of steps
  examplejob: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/circleci-demo-java-spring # directory where steps will run

    docker: # run the steps with Docker
    - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

    - checkout # check out source code to working directory

    - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
        key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

    - run: mvn dependency:go-offline # gets the project dependencies

    - save_cache: # saves the project dependencies
        paths:
        - ~/.m2
        key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

    - run: mvn package # run the actual tests

    - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
        path: target/surefire-reports

    - store_artifacts: # store the uberjar as an artifact
        path: target/test1-1.0-SNAPSHOT.jar

    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
    - persist_to_workspace:
        # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
        # taken to be the root directory of the workspace.
        root: target
        # Must be relative path from root
        paths:
          - test1-1.0-SNAPSHOT.jar

workflows:
  main:
    jobs:
      - examplejob
      - my-orb/nexusjob:
          requires:
            - examplejob
